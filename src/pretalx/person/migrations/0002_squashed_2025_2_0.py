# Generated by Django 5.2.3 on 2025-06-10 12:43

import django.db.models.deletion
import i18nfield.fields
import pretalx.common.models.mixins
import pretalx.person.models.auth_token
import pretalx.person.models.information
import pretalx.person.models.user
import rules.contrib.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("person", "0002_auto_20170715_0655"),
        ("person", "0003_auto_20170908_0548"),
        ("person", "0004_auto_20171001_1358"),
        ("person", "0005_user_avatar"),
        ("person", "0006_user_get_gravatar"),
        ("person", "0007_user_code"),
        ("person", "0008_data_populate_user_code"),
        ("person", "0009_auto_20171106_0608"),
        ("person", "0010_eventpermission_review_override_count"),
        ("person", "0011_speakerprofile_has_arrived"),
        ("person", "0012_user_is_administrator"),
        ("person", "0013_auto_20180122_1615"),
        ("person", "0014_speakerinformation"),
        ("person", "0015_speakerinformation_resource"),
        ("person", "0016_auto_20180425_0647"),
        ("person", "0017_auto_20180530_1434"),
        ("person", "0018_auto_20180812_1523"),
        ("person", "0019_auto_20180821_1346"),
        ("person", "0020_auto_20180922_0511"),
        ("person", "0021_auto_20200124_1213"),
        ("person", "0022_filter_information_by_type_and_track"),
        ("person", "0023_speakerinformation_target_group"),
        ("person", "0024_date_migration_information_target_group"),
        ("person", "0025_drop_unused_speakerinformation_fields"),
        ("person", "0026_alter_user_timezone"),
        ("person", "0027_created_updated_everywhere"),
        ("person", "0028_user_avatar_thumbnail_user_avatar_thumbnail_tiny"),
        ("person", "0029_alter_user_avatar_thumbnail_and_more"),
        ("person", "0030_userapitoken"),
        ("person", "0031_migrate_auth_tokens"),
    ]

    dependencies = [
        ("event", "0039_alter_teaminvite_token"),
        ("person", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="user",
            name="send_mail",
        ),
        migrations.AddField(
            model_name="eventpermission",
            name="is_reviewer",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="speakerprofile",
            name="biography",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="avatar",
            field=models.ImageField(
                blank=True, null=True, upload_to=pretalx.person.models.user.avatar_path
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="get_gravatar",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="code",
            field=models.CharField(max_length=16, null=True, unique=True),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
            ),
        ),
        migrations.AddField(
            model_name="eventpermission",
            name="review_override_count",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="speakerprofile",
            name="has_arrived",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="user",
            name="is_administrator",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="SpeakerInformation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("title", i18nfield.fields.I18nCharField(max_length=200)),
                ("text", i18nfield.fields.I18nTextField()),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="information",
                        to="event.event",
                    ),
                ),
                (
                    "resource",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=pretalx.person.models.information.resource_path,
                    ),
                ),
                ("limit_tracks", models.ManyToManyField(to="submission.track")),
                ("limit_types", models.ManyToManyField(to="submission.submissiontype")),
                ("target_group", models.CharField(default="accepted", max_length=11)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
            ],
            bases=(pretalx.common.models.mixins.LogMixin, models.Model),
        ),
        migrations.AlterField(
            model_name="user",
            name="name",
            field=models.CharField(default="", max_length=120),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name="EventPermission",
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name="user",
            name="locale",
            field=models.CharField(default="en", max_length=32),
        ),
        migrations.AlterField(
            model_name="user",
            name="nick",
            field=models.CharField(blank=True, max_length=60, null=True),
        ),
        migrations.AlterField(
            model_name="user",
            name="timezone",
            field=models.CharField(default="UTC", max_length=32),
        ),
        migrations.AddField(
            model_name="speakerprofile",
            name="created",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="speakerprofile",
            name="updated",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="avatar_thumbnail",
            field=models.ImageField(null=True, upload_to="avatars/"),
        ),
        migrations.AddField(
            model_name="user",
            name="avatar_thumbnail_tiny",
            field=models.ImageField(null=True, upload_to="avatars/"),
        ),
        migrations.CreateModel(
            name="UserApiToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                ("name", models.CharField(max_length=190)),
                (
                    "token",
                    models.CharField(
                        default=pretalx.person.models.auth_token.generate_api_token,
                        max_length=64,
                        unique=True,
                    ),
                ),
                ("expires", models.DateTimeField(blank=True, null=True)),
                ("endpoints", models.JSONField(default=dict)),
                ("version", models.CharField(max_length=12, null=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("events", models.ManyToManyField(related_name="+", to="event.event")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                pretalx.common.models.mixins.LogMixin,
                pretalx.common.models.mixins.FileCleanupMixin,
                rules.contrib.models.RulesModelMixin,
                models.Model,
            ),
        ),
    ]
