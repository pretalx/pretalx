# Generated by Django 5.2.3 on 2025-06-10 12:42

import datetime
import django.core.validators
import django.db.models.deletion
import i18nfield.fields
import pretalx.common.models.mixins
import pretalx.event.models.event
import pretalx.event.models.organiser
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("event", "0002_auto_20170429_1018"),
        ("event", "0003_auto_20170715_0655"),
        ("event", "0004_event_update_template"),
        ("event", "0005_event_custom_css"),
        ("event", "0006_auto_20170906_0205"),
        ("event", "0007_auto_20170924_0505"),
        ("event", "0008_event_logo"),
        ("event", "0009_event_landing_page_text"),
        ("event", "0010_event_plugins"),
        ("event", "0011_event_question_template"),
        ("event", "0012_auto_20180407_0814"),
        ("event", "0013_auto_20180407_0817"),
        ("event", "0014_auto_20180407_0826"),
        ("event", "0015_remove_event_subtitle"),
        ("event", "0016_remove_event_permitted"),
        ("event", "0017_auto_20180922_0511"),
        ("event", "0018_auto_20190223_1543"),
        ("event", "0019_auto_20190224_0856"),
        ("event", "0020_event_header_image"),
        ("event", "0021_auto_20190429_0750"),
        ("event", "0022_auto_20200124_1213"),
        ("event", "0023_update_featured_visibility"),
        ("event", "0024_remove_team_review_override_votes"),
        ("event", "0025_event_featured_sessions_text"),
        ("event", "0026_team_force_hide_speaker_names"),
        ("event", "0027_event_settings"),
        ("event", "0028_custom_event_data"),
        ("event", "0029_event_domain"),
        ("event", "0030_event_content_locale_array"),
        ("event", "0031_initial_content_locale"),
        ("event", "0032_alter_event_timezone"),
        ("event", "0033_chinese_locale_codes"),
        ("event", "0034_fix_language_codes"),
        ("event", "0035_created_updated_everywhere"),
        ("event", "0036_alter_event_header_image_alter_event_logo"),
        ("event", "0037_remove_event_accept_template_and_more"),
        ("event", "0038_eventextralink"),
        ("event", "0039_alter_teaminvite_token"),
    ]

    dependencies = [
        ("event", "0001_initial"),
        ("mail", "0013_mailtemplate_role"),
        ("person", "0001_initial"),
        ("submission", "0077_answeroption_position"),
    ]

    operations = [
        migrations.AddField(
            model_name="event",
            name="accept_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="mail.mailtemplate",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="ack_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="mail.mailtemplate",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="permitted",
            field=models.ManyToManyField(
                related_name="events",
                through="person.EventPermission",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="reject_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="mail.mailtemplate",
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="date_from",
            field=models.DateField(default=datetime.date(2017, 7, 15)),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="event",
            name="date_to",
            field=models.DateField(default=datetime.date(2017, 7, 15)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="event",
            name="update_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="mail.mailtemplate",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="custom_css",
            field=models.FileField(
                blank=True,
                null=True,
                upload_to=pretalx.event.models.event.event_css_path,
            ),
        ),
        migrations.RenameField(
            model_name="event",
            old_name="color",
            new_name="primary_color",
        ),
        migrations.AlterField(
            model_name="event",
            name="email",
            field=models.EmailField(default="event@localhost", max_length=254),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="event",
            name="slug",
            field=models.SlugField(
                validators=[
                    django.core.validators.RegexValidator(
                        message="The slug may only contain letters, numbers, dots and dashes.",
                        regex="^[a-zA-Z0-9.-]+$",
                    )
                ]
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="subtitle",
            field=i18nfield.fields.I18nCharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="logo",
            field=models.FileField(
                blank=True,
                null=True,
                upload_to=pretalx.event.models.event.event_logo_path,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="landing_page_text",
            field=i18nfield.fields.I18nTextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="plugins",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="question_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="mail.mailtemplate",
            ),
        ),
        migrations.AlterModelOptions(
            name="event",
            options={"ordering": ("date_from",)},
        ),
        migrations.AlterField(
            model_name="event",
            name="custom_css",
            field=models.FileField(
                blank=True,
                null=True,
                upload_to=pretalx.event.models.event.event_css_path,
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="primary_color",
            field=models.CharField(
                blank=True,
                max_length=7,
                null=True,
                validators=[
                    django.core.validators.RegexValidator("#([0-9A-Fa-f]{3}){1,2}")
                ],
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="slug",
            field=models.SlugField(
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="The slug may only contain letters, numbers, dots and dashes.",
                        regex="^[a-zA-Z0-9.-]+$",
                    ),
                    pretalx.event.models.event.validate_event_slug_permitted,
                ],
            ),
        ),
        migrations.CreateModel(
            name="Organiser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", i18nfield.fields.I18nCharField(max_length=190)),
                (
                    "slug",
                    models.SlugField(
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="The slug may only contain letters, numbers, dots and dashes.",
                                regex="^[a-zA-Z0-9-]+$",
                            )
                        ],
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
            ],
            bases=(pretalx.common.models.mixins.LogMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=190)),
                ("all_events", models.BooleanField(default=False)),
                ("can_create_events", models.BooleanField(default=False)),
                ("can_change_teams", models.BooleanField(default=False)),
                ("can_change_organiser_settings", models.BooleanField(default=False)),
                ("can_change_event_settings", models.BooleanField(default=False)),
                ("can_change_submissions", models.BooleanField(default=False)),
                ("is_reviewer", models.BooleanField(default=False)),
                ("limit_events", models.ManyToManyField(blank=True, to="event.event")),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="teams", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "organiser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="event.organiser",
                    ),
                ),
                (
                    "limit_tracks",
                    models.ManyToManyField(blank=True, to="submission.track"),
                ),
                ("force_hide_speaker_names", models.BooleanField(default=False)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
            ],
            bases=(pretalx.common.models.mixins.LogMixin, models.Model),
        ),
        migrations.AddField(
            model_name="event",
            name="organiser",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="event.organiser",
            ),
        ),
        migrations.RemoveField(
            model_name="event",
            name="subtitle",
        ),
        migrations.RemoveField(
            model_name="event",
            name="permitted",
        ),
        migrations.AlterField(
            model_name="event",
            name="landing_page_text",
            field=i18nfield.fields.I18nTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="event",
            name="locale",
            field=models.CharField(default="en", max_length=32),
        ),
        migrations.AddField(
            model_name="event",
            name="featured_sessions_text",
            field=i18nfield.fields.I18nTextField(null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="custom_domain",
            field=models.URLField(null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="display_settings",
            field=models.JSONField(
                default=pretalx.event.models.event.default_display_settings
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="feature_flags",
            field=models.JSONField(
                default=pretalx.event.models.event.default_feature_flags
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="mail_settings",
            field=models.JSONField(
                default=pretalx.event.models.event.default_mail_settings
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="review_settings",
            field=models.JSONField(
                default=pretalx.event.models.event.default_review_settings
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="content_locale_array",
            field=models.TextField(default="en"),
        ),
        migrations.AlterField(
            model_name="event",
            name="timezone",
            field=models.CharField(default="UTC", max_length=32),
        ),
        migrations.AddField(
            model_name="event",
            name="created",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="updated",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="event",
            name="header_image",
            field=models.ImageField(
                null=True, upload_to=pretalx.event.models.event.event_logo_path
            ),
        ),
        migrations.AlterField(
            model_name="event",
            name="logo",
            field=models.ImageField(
                null=True, upload_to=pretalx.event.models.event.event_logo_path
            ),
        ),
        migrations.RemoveField(
            model_name="event",
            name="accept_template",
        ),
        migrations.RemoveField(
            model_name="event",
            name="ack_template",
        ),
        migrations.RemoveField(
            model_name="event",
            name="question_template",
        ),
        migrations.RemoveField(
            model_name="event",
            name="reject_template",
        ),
        migrations.RemoveField(
            model_name="event",
            name="update_template",
        ),
        migrations.CreateModel(
            name="EventExtraLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                ("label", i18nfield.fields.I18nCharField(max_length=200)),
                ("url", models.URLField()),
                ("role", models.CharField(default="footer", max_length=6)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extra_links",
                        to="event.event",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                pretalx.common.models.mixins.OrderedModel,
                pretalx.common.models.mixins.LogMixin,
                pretalx.common.models.mixins.FileCleanupMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="TeamInvite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "token",
                    models.CharField(
                        default=pretalx.event.models.organiser.generate_invite_token,
                        max_length=64,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invites",
                        to="event.team",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
    ]
