[tox]
envlist =
    dev
    lint
    tests-{mysql,postgres,sqlite}-{codecov}
    installation
    docs, docs-linkcheck, docs-autobuild
skip_missing_interpreters = true
setupdir = src


[testenv]
basepython = python3.7
usedevelop = True
envdir = {toxinidir}/.env
recreate = false
deps =
    -e src
    tests: beautifulsoup4
    tests: lxml
    tests: pytest
    tests: pytest-cov
    tests: pytest-django
    tests: pytest-mock
    tests: pytest-sugar
    tests: pytest-xdist
    mysql: mysqlclient
    postgres: psycopg2-binary
    codecov: codecov
    codecov: coverage
    dev: django-debug-toolbar
    dev: django-extensions
    dev: ipython
    dev: pywatchman
    lint: isort
    lint: pylama
    docs: potypo
    docs: releases
    docs: sphinx
    docs: sphinxcontrib-httpdomain
    docs: sphinx-autodoc-typehints
    docs: git+https://github.com/rixx/sphinxcontrib-django.git@master
    autobuild: sphinx-autobuild
changedir = src
passenv =
    # See https://github.com/codecov/codecov-python/blob/5b9d539a6a09bc84501b381b563956295478651a/README.md#using-tox
    tests-*: TOXENV
    tests-*: CI
    tests-*: TRAVIS TRAVIS_*
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUALENV_NO_DOWNLOAD=1


[testenv:dev]
description = Run development commands. By default the development server is started, but you can call other commands: tox -e dev manage.py makemigrations
commands = python {posargs:-m pretalx runserver}
setenv =
    PYTHONPATH={toxinidir}
    PATH={envdir}/bin:{env:PATH}
ignore_outcome = True


[testenv:lint]
description = Check the code style of the project and print outdated requirements
commands =
    pip list -o --format=columns
    isort -rc -c {toxinidir}/src
    pylama {toxinidir}/src


[testenv:docs]
description = Build the documentation
commands =
    make html
changedir = doc
whitelist_externals = /usr/bin/make


[testenv:docs-linkcheck]
description = Check that all links in docs are working.
commands =
    make linkcheck
ignore_outcome = True
changedir = doc
whitelist_externals = /usr/bin/make


[testenv:docs-autobuild]
description = Run a sphinx server that automatically rebuilds for changes.
whitelist_externals = /usr/bin/make
commands =
    sphinx-autobuild . _build/html -p 8081
ignore_outcome = True
changedir = doc


[testenv:installation]
description = Check that startup of pretalx works as intended.
commands = 
    python -m pretalx check
    python -m pretalx migrate
    python -m pretalx rebuild --clear

[testenv:tests]
commands = pytest {posargs:tests/}


[testenv:tests-sqlite]
commands =
    python -m pretalx rebuild
    pytest {posargs:tests/}
setenv =
    PRETALX_DATA_DIR={toxinidir}/src/data/test-sqlite


[testenv:tests-sqlite-codecov]
description = Build a coverage report and upload it to codecov.io
commands =
    python -m pretalx rebuild
    pytest --cov=pretalx {posargs:tests/}
    codecov
setenv =
    PRETALX_DATA_DIR={toxinidir}/src/data/test-sqlite


[testenv:tests-postgres]
commands =
    python -m pretalx rebuild
    pytest --cov=pretalx {posargs:tests/}
setenv =
    PRETALX_DATA_DIR={toxinidir}/src/data/test-postgres
    PRETALX_DB_TYPE=postgresql_psycopg2
    PRETALX_DB_NAME=travis_ci_test
    PRETALX_DB_USER=postgres
    PRETALX_DB_PASSWORD=
    PRETALX_DB_HOST=localhost
whitelist_externals = /usr/bin/postgres

[testenv:tests-mysql]
commands =
    python -m pretalx rebuild
    pytest --cov=pretalx {posargs:tests/}
setenv =
    PRETALX_DATA_DIR={toxinidir}/src/data/test-mysql
    PRETALX_DB_TYPE=mysql
    PRETALX_DB_NAME=pretalx
    PRETALX_DB_USER=root
    PRETALX_DB_PASSWORD=
    PRETALX_DB_HOST=127.0.0.1
    PRETALX_DB_PORT=3306
